"use strict";(self.webpackChunkoptimized_js_project=self.webpackChunkoptimized_js_project||[]).push([[784],{1617:(t,e,n)=>{n.d(e,{f:()=>C});var o=n(4815),r=n(5201),a=n(46),i=n(635),u=n(9627),s=n(9089);const l=Math.PI,c=l/2,f=180/l,p=l/180,h=(Math.abs,Math.atan,Math.atan2),d=Math.cos,g=(Math.ceil,Math.exp,Math.floor,Math.log,Math.max),y=Math.min,m=(Math.pow,Math.sin),v=Math.sign||function(t){return t>0?1:t<0?-1:0},M=Math.sqrt;Math.tan;function _(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function b(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function j(t,e){return[t[0]+e[0],t[1]+e[1],t[2]+e[2]]}function E(t){var e=M(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]}function w(t){return[h(t[1],t[0])*f,(e=g(-1,y(1,t[2])),(e>1?c:e<-1?-c:Math.asin(e))*f)];var e}function F(t){const e=t[0]*p,n=t[1]*p,o=d(n);return[o*d(e),o*m(e),m(n)]}function Z(t){return _((t=t.map((t=>F(t))))[0],b(t[2],t[1]))}function x(t){const e=function(t){if(t.length<2)return{};let e=0;for(;isNaN(t[e][0]+t[e][1])&&e++<t.length;);const n=(0,i.Z)(t[e]),o=(0,u.Z)().translate([0,0]).scale(1).rotate(n.invert([180,0]));t=t.map(o);const r=[];let s=1;for(let e=0,n=t.length;e<n;e++){let n=t[e][0]**2+t[e][1]**2;!isFinite(n)||n>1e32?r.push(e):n>s&&(s=n)}const l=1e6*M(s);r.forEach((e=>t[e]=[l,0])),t.push([0,l]),t.push([-l,0]),t.push([0,-l]);const c=a.Z.from(t);c.projection=o;const{triangles:f,halfedges:p,inedges:h}=c,d=[];for(let n=0,o=p.length;n<o;n++)if(p[n]<0){const t=n%3==2?n-2:n+1,o=n%3==0?n+2:n-1,r=p[t],a=p[o];p[r]=a,p[a]=r,p[t]=p[o]=-1,f[n]=f[t]=f[o]=e,h[f[r]]=r%3==0?r+2:r-1,h[f[a]]=a%3==0?a+2:a-1,d.push(Math.min(n,t,o)),n+=2-n%3}else f[n]>t.length-3-1&&(f[n]=e);return c}(t),n=function(t){const{triangles:e}=t;if(!e)return[];const n=[];for(let t=0,o=e.length/3;t<o;t++){const o=e[3*t],r=e[3*t+1],a=e[3*t+2];o!==r&&r!==a&&n.push([o,a,r])}return n}(e),o=function(t,e){const n=new Set;return 2===e.length?[[0,1]]:(t.forEach((t=>{if(t[0]!==t[1]&&!(Z(t.map((t=>e[t])))<0))for(let e,o=0;o<3;o++)e=(o+1)%3,n.add((0,s.Z)([t[o],t[e]]).join("-"))})),Array.from(n,(t=>t.split("-").map(Number))))}(n,t),r=function(t,e){const n=[];t.forEach((t=>{for(let e=0;e<3;e++){const o=t[e],r=t[(e+1)%3];n[o]=n[o]||[],n[o].push(r)}})),0===t.length&&(2===e?(n[0]=[1],n[1]=[0]):1===e&&(n[0]=[]));return n}(n,t.length),l=function(t,e){function n(t,e){let n=t[0]-e[0],o=t[1]-e[1],r=t[2]-e[2];return n*n+o*o+r*r}return function(o,r,a){void 0===a&&(a=0);let i,u,s=a;const l=F([o,r]);do{i=a,a=null,u=n(l,F(e[i])),t[i].forEach((t=>{let o=n(l,F(e[t]));if(o<u)return u=o,a=t,void(s=t)}))}while(null!==a);return s}}(r,t),c=function(t,e){return t.map((t=>{const n=t.map((t=>e[t])).map(F);return w(E(j(j(b(n[1],n[0]),b(n[2],n[1])),b(n[0],n[2]))))}))}(n,t),{polygons:f,centers:p}=function(t,e,n){const o=[],r=t.slice();if(0===e.length){if(n.length<2)return{polygons:o,centers:r};if(2===n.length){const t=F(n[0]),e=F(n[1]),a=E(j(t,e)),u=E(b(t,e)),s=b(a,u),l=[a,b(a,s),b(b(a,s),s),b(b(b(a,s),s),s)].map(w).map(i);return o.push(l),o.push(l.slice().reverse()),{polygons:o,centers:r}}}e.forEach(((t,e)=>{for(let n=0;n<3;n++){const r=t[n],a=t[(n+1)%3],i=t[(n+2)%3];o[r]=o[r]||[],o[r].push([a,i,e,[r,a,i]])}}));const a=o.map((t=>{const e=[t[0][2]];let o=t[0][1];for(let n=1;n<t.length;n++)for(let n=0;n<t.length;n++)if(t[n][0]==o){o=t[n][1],e.push(t[n][2]);break}if(e.length>2)return e;if(2==e.length){const o=k(n[t[0][3][0]],n[t[0][3][1]],r[e[0]]),a=k(n[t[0][3][2]],n[t[0][3][0]],r[e[0]]),u=i(o),s=i(a);return[e[0],s,e[1],u]}}));function i(t){let n=-1;return r.slice(e.length,1/0).forEach(((o,r)=>{o[0]===t[0]&&o[1]===t[1]&&(n=r+e.length)})),n<0&&(n=r.length,r.push(t)),n}return{polygons:a,centers:r}}(c,n,t),h=function(t){const e=[];return t.forEach((t=>{if(!t)return;let n=t[t.length-1];for(let o of t)o>n&&e.push([n,o]),n=o})),e}(f),d=function(t,e){const n=new Set,o=[];t.map((t=>{if(!(Z(t.map((t=>e[t>e.length?0:t])))>1e-12))for(let e=0;e<3;e++){let o=[t[e],t[(e+1)%3]],r=`${o[0]}-${o[1]}`;n.has(r)?n.delete(r):n.add(`${o[1]}-${o[0]}`)}}));const r=new Map;let a;if(n.forEach((t=>{t=t.split("-").map(Number),r.set(t[0],t[1]),a=t[0]})),void 0===a)return o;let i=a;do{o.push(i);let t=r.get(i);r.set(i,-1),i=t}while(i>-1&&i!==a);return o}(n,t),g=function(t,e){return function(n){const o=new Map,r=new Map;return t.forEach(((t,e)=>{const a=t.join("-");o.set(a,n[e]),r.set(a,!0)})),e.forEach((t=>{let e=0,n=-1;for(let r=0;r<3;r++){let a=(0,s.Z)([t[r],t[(r+1)%3]]).join("-");o.get(a)>e&&(e=o.get(a),n=a)}r.set(n,!1)})),t.map((t=>r.get(t.join("-"))))}}(o,n);return{delaunay:e,edges:o,triangles:n,centers:p,neighbors:r,polygons:f,mesh:h,hull:d,urquhart:g,find:l}}function k(t,e,n){t=F(t),e=F(e),n=F(n);const o=v(_(b(e,t),n));return w(E(j(t,e)).map((t=>o*t)))}function C(t){const e=function(t){if(e.delaunay=null,e._data=t,"object"==typeof e._data&&"FeatureCollection"===e._data.type&&(e._data=e._data.features),"object"==typeof e._data){const t=e._data.map((t=>[e._vx(t),e._vy(t),t])).filter((t=>isFinite(t[0]+t[1])));e.points=t.map((t=>[t[0],t[1]])),e.valid=t.map((t=>t[2])),e.delaunay=x(e.points)}return e};return e._vx=function(t){return"object"==typeof t&&"type"in t?(0,o.Z)(t)[0]:0 in t?t[0]:void 0},e._vy=function(t){return"object"==typeof t&&"type"in t?(0,o.Z)(t)[1]:1 in t?t[1]:void 0},e.x=function(t){return t?(e._vx=t,e):e._vx},e.y=function(t){return t?(e._vy=t,e):e._vy},e.polygons=function(t){if(void 0!==t&&e(t),!e.delaunay)return!1;const n={type:"FeatureCollection",features:[]};return 0===e.valid.length||(e.delaunay.polygons.forEach(((t,o)=>n.features.push({type:"Feature",geometry:t?{type:"Polygon",coordinates:[[...t,t[0]].map((t=>e.delaunay.centers[t]))]}:null,properties:{site:e.valid[o],sitecoordinates:e.points[o],neighbours:e.delaunay.neighbors[o]}}))),1===e.valid.length&&n.features.push({type:"Feature",geometry:{type:"Sphere"},properties:{site:e.valid[0],sitecoordinates:e.points[0],neighbours:[]}})),n},e.triangles=function(t){return void 0!==t&&e(t),!!e.delaunay&&{type:"FeatureCollection",features:e.delaunay.triangles.map(((t,n)=>((t=t.map((t=>e.points[t]))).center=e.delaunay.centers[n],t))).filter((t=>Z(t)>0)).map((t=>({type:"Feature",properties:{circumcenter:t.center},geometry:{type:"Polygon",coordinates:[[...t,t[0]]]}})))}},e.links=function(t){if(void 0!==t&&e(t),!e.delaunay)return!1;const n=e.delaunay.edges.map((t=>(0,r.Z)(e.points[t[0]],e.points[t[1]]))),o=e.delaunay.urquhart(n);return{type:"FeatureCollection",features:e.delaunay.edges.map(((t,r)=>({type:"Feature",properties:{source:e.valid[t[0]],target:e.valid[t[1]],length:n[r],urquhart:!!o[r]},geometry:{type:"LineString",coordinates:[e.points[t[0]],e.points[t[1]]]}})))}},e.mesh=function(t){return void 0!==t&&e(t),!!e.delaunay&&{type:"MultiLineString",coordinates:e.delaunay.edges.map((t=>[e.points[t[0]],e.points[t[1]]]))}},e.cellMesh=function(t){if(void 0!==t&&e(t),!e.delaunay)return!1;const{centers:n,polygons:o}=e.delaunay,r=[];for(const t of o)if(t)for(let e=t.length,o=t[e-1],a=t[0],i=0;i<e;o=a,a=t[++i])a>o&&r.push([n[o],n[a]]);return{type:"MultiLineString",coordinates:r}},e._found=void 0,e.find=function(t,n,o){if(e._found=e.delaunay.find(t,n,e._found),!o||(0,r.Z)([t,n],e.points[e._found])<o)return e._found},e.hull=function(t){void 0!==t&&e(t);const n=e.delaunay.hull,o=e.points;return 0===n.length?null:{type:"Polygon",coordinates:[[...n.map((t=>o[t])),o[n[0]]]]}},t?e(t):e}}}]);